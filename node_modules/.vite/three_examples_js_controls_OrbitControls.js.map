{
  "version": 3,
  "sources": ["../three/examples/js/controls/OrbitControls.js", "dep:three_examples_js_controls_OrbitControls"],
  "sourcesContent": ["( function () {\n\n\t// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n\t//\n\t//    Orbit - left mouse / touch: one-finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n\t//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\n\tconst _changeEvent = {\n\t\ttype: 'change'\n\t};\n\tconst _startEvent = {\n\t\ttype: 'start'\n\t};\n\tconst _endEvent = {\n\t\ttype: 'end'\n\t};\n\n\tclass OrbitControls extends THREE.EventDispatcher {\n\n\t\tconstructor( object, domElement ) {\n\n\t\t\tsuper();\n\t\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\t\t\tthis.object = object;\n\t\t\tthis.domElement = domElement;\n\t\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\t\t\t// Set to false to disable this control\n\n\t\t\tthis.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n\t\t\tthis.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\n\t\t\tthis.minPolarAngle = 0; // radians\n\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0; // Set to false to disable rotating\n\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0; // Set to false to disable panning\n\n\t\t\tthis.enablePan = true;\n\t\t\tthis.panSpeed = 1.0;\n\t\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n\t\t\tthis.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\t\t\t// The four arrow keys\n\n\t\t\tthis.keys = {\n\t\t\t\tLEFT: 'ArrowLeft',\n\t\t\t\tUP: 'ArrowUp',\n\t\t\t\tRIGHT: 'ArrowRight',\n\t\t\t\tBOTTOM: 'ArrowDown'\n\t\t\t}; // Mouse buttons\n\n\t\t\tthis.mouseButtons = {\n\t\t\t\tLEFT: THREE.MOUSE.ROTATE,\n\t\t\t\tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t\t\tRIGHT: THREE.MOUSE.PAN\n\t\t\t}; // Touch fingers\n\n\t\t\tthis.touches = {\n\t\t\t\tONE: THREE.TOUCH.ROTATE,\n\t\t\t\tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t\t}; // for reset\n\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom; // the target DOM element for key events\n\n\t\t\tthis._domElementKeyEvents = null; //\n\t\t\t// public methods\n\t\t\t//\n\n\t\t\tthis.getPolarAngle = function () {\n\n\t\t\t\treturn spherical.phi;\n\n\t\t\t};\n\n\t\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\t\treturn spherical.theta;\n\n\t\t\t};\n\n\t\t\tthis.getDistance = function () {\n\n\t\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t\t};\n\n\t\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t\t};\n\n\t\t\tthis.saveState = function () {\n\n\t\t\t\tscope.target0.copy( scope.target );\n\t\t\t\tscope.position0.copy( scope.object.position );\n\t\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t\t};\n\n\t\t\tthis.reset = function () {\n\n\t\t\t\tscope.target.copy( scope.target0 );\n\t\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\t\tscope.object.zoom = scope.zoom0;\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tscope.dispatchEvent( _changeEvent );\n\t\t\t\tscope.update();\n\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n\t\t\tthis.update = function () {\n\n\t\t\t\tconst offset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n\t\t\t\tconst quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tconst quatInverse = quat.clone().invert();\n\t\t\t\tconst lastPosition = new THREE.Vector3();\n\t\t\t\tconst lastQuaternion = new THREE.Quaternion();\n\t\t\t\tconst twoPI = 2 * Math.PI;\n\t\t\t\treturn function update() {\n\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target ); // rotate offset to \"y-axis-is-up\" space\n\n\t\t\t\t\toffset.applyQuaternion( quat ); // angle from z-axis around y-axis\n\n\t\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t\t} // restrict theta to be between desired limits\n\n\n\t\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\t\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tspherical.theta = spherical.theta > ( min + max ) / 2 ? Math.max( min, spherical.theta ) : Math.min( max, spherical.theta );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // restrict phi to be between desired limits\n\n\n\t\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\t\t\t\t\tspherical.makeSafe();\n\t\t\t\t\tspherical.radius *= scale; // restrict radius to be between desired limits\n\n\t\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) ); // move target to panned location\n\n\t\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\toffset.setFromSpherical( spherical ); // rotate offset back to \"camera-up-vector-is-up\" space\n\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\t\t\t\tposition.copy( scope.target ).add( offset );\n\t\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\t\tsphericalDelta.theta *= 1 - scope.dampingFactor;\n\t\t\t\t\t\tsphericalDelta.phi *= 1 - scope.dampingFactor;\n\t\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\t\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscale = 1; // update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\t\tif ( zoomChanged || lastPosition.distanceToSquared( scope.object.position ) > EPS || 8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\t\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t};\n\n\t\t\t}();\n\n\t\t\tthis.dispose = function () {\n\n\t\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t\t} //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t\t}; //\n\t\t\t// internals\n\t\t\t//\n\n\n\t\t\tconst scope = this;\n\t\t\tconst STATE = {\n\t\t\t\tNONE: - 1,\n\t\t\t\tROTATE: 0,\n\t\t\t\tDOLLY: 1,\n\t\t\t\tPAN: 2,\n\t\t\t\tTOUCH_ROTATE: 3,\n\t\t\t\tTOUCH_PAN: 4,\n\t\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t\t};\n\t\t\tlet state = STATE.NONE;\n\t\t\tconst EPS = 0.000001; // current position in spherical coordinates\n\n\t\t\tconst spherical = new THREE.Spherical();\n\t\t\tconst sphericalDelta = new THREE.Spherical();\n\t\t\tlet scale = 1;\n\t\t\tconst panOffset = new THREE.Vector3();\n\t\t\tlet zoomChanged = false;\n\t\t\tconst rotateStart = new THREE.Vector2();\n\t\t\tconst rotateEnd = new THREE.Vector2();\n\t\t\tconst rotateDelta = new THREE.Vector2();\n\t\t\tconst panStart = new THREE.Vector2();\n\t\t\tconst panEnd = new THREE.Vector2();\n\t\t\tconst panDelta = new THREE.Vector2();\n\t\t\tconst dollyStart = new THREE.Vector2();\n\t\t\tconst dollyEnd = new THREE.Vector2();\n\t\t\tconst dollyDelta = new THREE.Vector2();\n\t\t\tconst pointers = [];\n\t\t\tconst pointerPositions = {};\n\n\t\t\tfunction getAutoRotationAngle() {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t\tfunction getZoomScale() {\n\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t\t}\n\n\t\t\tfunction rotateLeft( angle ) {\n\n\t\t\t\tsphericalDelta.theta -= angle;\n\n\t\t\t}\n\n\t\t\tfunction rotateUp( angle ) {\n\n\t\t\t\tsphericalDelta.phi -= angle;\n\n\t\t\t}\n\n\t\t\tconst panLeft = function () {\n\n\t\t\t\tconst v = new THREE.Vector3();\n\t\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\t\t\t\tpanOffset.add( v );\n\n\t\t\t\t};\n\n\t\t\t}();\n\n\t\t\tconst panUp = function () {\n\n\t\t\t\tconst v = new THREE.Vector3();\n\t\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\t\t\t\tpanOffset.add( v );\n\n\t\t\t\t};\n\n\t\t\t}(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n\t\t\tconst pan = function () {\n\n\t\t\t\tconst offset = new THREE.Vector3();\n\t\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// perspective\n\t\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\t\tlet targetDistance = offset.length(); // half of the fov is center to top of screen\n\n\t\t\t\t\t\ttargetDistance *= Math.tan( scope.object.fov / 2 * Math.PI / 180.0 ); // we use only clientHeight here so aspect ratio does not distort speed\n\n\t\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// orthographic\n\t\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}();\n\n\t\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\tscale /= dollyScale;\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\t\tscope.enableZoom = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\tscale *= dollyScale;\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\t\tscope.enableZoom = false;\n\n\t\t\t\t}\n\n\t\t\t} //\n\t\t\t// event callbacks - update the object state\n\t\t\t//\n\n\n\t\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\t\t\t\tconst element = scope.domElement;\n\t\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\t\t\t\trotateStart.copy( rotateEnd );\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\t\t\tpanStart.copy( panEnd );\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleMouseWheel( event ) {\n\n\t\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleKeyDown( event ) {\n\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tswitch ( event.code ) {\n\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tscope.update();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartRotate() {\n\n\t\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\t\t\t\t\trotateStart.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartPan() {\n\n\t\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\t\t\t\t\tpanStart.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartDolly() {\n\n\t\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\t\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\tdollyStart.set( 0, distance );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\t\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\t\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst position = getSecondPointerPosition( event );\n\t\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\t\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\t\t\t\tconst element = scope.domElement;\n\t\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst position = getSecondPointerPosition( event );\n\t\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\t\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\t\t\t\tconst dx = event.pageX - position.x;\n\t\t\t\tconst dy = event.pageY - position.y;\n\t\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\t\t\t\tdollyOut( dollyDelta.y );\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\t\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\t\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t\t} //\n\t\t\t// event handlers - FSM: listen for events and reset state\n\t\t\t//\n\n\n\t\t\tfunction onPointerDown( event ) {\n\n\t\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\t\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t} //\n\n\n\t\t\t\taddPointer( event );\n\n\t\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\t\tonTouchStart( event );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tonMouseDown( event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onPointerMove( event ) {\n\n\t\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\t\tonTouchMove( event );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tonMouseMove( event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onPointerUp( event ) {\n\n\t\t\t\tremovePointer( event );\n\n\t\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t}\n\n\t\t\t\tscope.dispatchEvent( _endEvent );\n\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tfunction onPointerCancel( event ) {\n\n\t\t\t\tremovePointer( event );\n\n\t\t\t}\n\n\t\t\tfunction onMouseDown( event ) {\n\n\t\t\t\tlet mouseAction;\n\n\t\t\t\tswitch ( event.button ) {\n\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\t\tcase THREE.MOUSE.DOLLY:\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\thandleMouseDownDolly( event );\n\t\t\t\t\t\tstate = STATE.DOLLY;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.ROTATE:\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.PAN:\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onMouseMove( event ) {\n\n\t\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\t\tswitch ( state ) {\n\n\t\t\t\t\tcase STATE.ROTATE:\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\thandleMouseMoveRotate( event );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.DOLLY:\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\thandleMouseMoveDolly( event );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.PAN:\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\thandleMouseMovePan( event );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onMouseWheel( event ) {\n\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\t\t\t\thandleMouseWheel( event );\n\t\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\t}\n\n\t\t\tfunction onKeyDown( event ) {\n\n\t\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\t\t\t\thandleKeyDown( event );\n\n\t\t\t}\n\n\t\t\tfunction onTouchStart( event ) {\n\n\t\t\t\ttrackPointer( event );\n\n\t\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.ROTATE:\n\t\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartRotate();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.PAN:\n\t\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartPan();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.DOLLY_PAN:\n\t\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.DOLLY_ROTATE:\n\t\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onTouchMove( event ) {\n\n\t\t\t\ttrackPointer( event );\n\n\t\t\t\tswitch ( state ) {\n\n\t\t\t\t\tcase STATE.TOUCH_ROTATE:\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\thandleTouchMoveRotate( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.TOUCH_PAN:\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\thandleTouchMovePan( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\t\t\thandleTouchMoveDollyPan( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\t\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onContextMenu( event ) {\n\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\t\t\tevent.preventDefault();\n\n\t\t\t}\n\n\t\t\tfunction addPointer( event ) {\n\n\t\t\t\tpointers.push( event );\n\n\t\t\t}\n\n\t\t\tfunction removePointer( event ) {\n\n\t\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction trackPointer( event ) {\n\n\t\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\t\tif ( position === undefined ) {\n\n\t\t\t\t\tposition = new THREE.Vector2();\n\t\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t\t}\n\n\t\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t\t}\n\n\t\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\t\tconst pointer = event.pointerId === pointers[ 0 ].pointerId ? pointers[ 1 ] : pointers[ 0 ];\n\t\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t\t} //\n\n\n\t\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\t\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, {\n\t\t\t\tpassive: false\n\t\t\t} ); // force an update at start\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t} // This set of controls performs orbiting, dollying (zooming), and panning.\n\t// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n\t// This is very similar to OrbitControls, another set of touch behavior\n\t//\n\t//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n\t//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n\t//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\n\tclass MapControls extends OrbitControls {\n\n\t\tconstructor( object, domElement ) {\n\n\t\t\tsuper( object, domElement );\n\t\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\t\tthis.mouseButtons.LEFT = THREE.MOUSE.PAN;\n\t\t\tthis.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n\t\t\tthis.touches.ONE = THREE.TOUCH.PAN;\n\t\t\tthis.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n\n\t\t}\n\n\t}\n\n\tTHREE.MapControls = MapControls;\n\tTHREE.OrbitControls = OrbitControls;\n\n} )();\n", "export default require(\"./node_modules/three/examples/js/controls/OrbitControls.js\");"],
  "mappings": "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",
  "names": []
}
